/**
 * @author WMXPY
 * @overview generated by ghoti-cli
 * @fileoverview Component set Dropper
 */

import { ipcRenderer } from 'electron';
import * as React from 'react';

import DropZone from 'react-dropzone';
import Config from '../../config/config';

import * as fs from 'fs';
import * as path from 'path';

import { parsePDF } from '../lambda/parser';

export interface IProps {
    onDrop: () => void;
    onLoad: (content: string, path: string) => void;
}

class Dropper extends React.Component<IProps, {}> {
    public constructor(props) {
        super(props);
        this.onDrop = this.onDrop.bind(this);
    }

    public render() {
        return (
            <DropZone onDrop={this.onDrop} width={150} height={100} className="drag-in">
                <div>Drag or click here</div>
            </DropZone>);
    }

    protected onDrop(acceptedFiles: File[], rejectedFiles) {
        if (acceptedFiles.length > 0) {
            this.props.onDrop();
            const file = acceptedFiles[0];
            if (path.extname(file.path) === '.pdf') {
                // ipcRenderer.once('read-pdf-done', (event, splited) => {
                //     console.log(parsePDF(splited));
                // });
                // ipcRenderer.send('read-pdf', file.path);
            } else {
                fs.readFile((file as any).path, 'utf8', (err, content: string | Buffer) => {
                    if (err) {
                        throw err;
                    }
                    if (content instanceof Buffer) {
                        this.props.onLoad(content.toString(), file.path);
                    } else {
                        this.props.onLoad(content, file.path);
                    }
                });
            }
        }
    }
}

export default Dropper;
